{
  "server": {
    "transport": "stdio",
    "command": "npx",
    "args": ["-y", "@modelcontextprotocol/server-github"],
    "env": {
      "GITHUB_PERSONAL_ACCESS_TOKEN": "YOUR_GITHUB_TOKEN_HERE"
    }
  },
  "workflows": [
    {
      "name": "search-and-explore-repos",
      "description": "Test repository search and exploration",
      "steps": [
        {
          "user": "Search for repositories about Model Context Protocol and tell me about the most popular one",
          "expectedState": "modelcontextprotocol"
        }
      ],
      "expectTools": ["search_repositories"]
    },
    {
      "name": "comprehensive-repo-analysis",
      "description": "Test multiple GitHub operations",
      "steps": [
        {
          "user": "For the modelcontextprotocol/servers repository: read the README.md file, search for TypeScript files in the src directory, and list any open pull requests",
          "expectedState": "Model Context Protocol"
        }
      ],
      "expectTools": ["read_file", "search_code", "search_pull_requests"]
    },
    {
      "name": "issue-management-workflow",
      "description": "Test issue creation and management",
      "steps": [
        {
          "user": "Create an issue in test-repo with title 'Test Issue' and body 'This is a test', then list all open issues to confirm it was created",
          "expectedState": "Test Issue"
        }
      ],
      "expectTools": ["create_issue", "search_issues"]
    },
    {
      "name": "branch-operations",
      "description": "Test branch creation",
      "steps": [
        {
          "user": "Create a new branch called 'test-branch' in the current repository",
          "expectTools": ["create_branch"]
        }
      ]
    },
    {
      "name": "error-handling-test",
      "description": "Test error scenarios",
      "steps": [
        {
          "user": "Try to read a file that doesn't exist: nonexistent.txt",
          "expectTools": ["read_file"]
        }
      ]
    }
  ],
  "llmJudge": false,
  "timeout": 60000
}
